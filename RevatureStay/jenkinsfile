pipeline {
    agent any

    environment {
        IMAGE_NAME = "revstay"
        CONTAINER_NAME = "crisscuautzo/revstay"
        EC2_HOST = "ec2-user@3.145.87.142"
        DB_URL='jdbc:postgresql://revstay.cx6u4sk4uc9r.us-east-2.rds.amazonaws.com:5432/postgres'
        DB_USERNAME='revstay'
        DB_PASSWORD=credentials('db-password')
    }

    stages {
        // Stage 1
        stage('Clone Repo') {
            steps {
                dir('revstay') {
                        git url: 'https://github.com/250224-JavaReactAWS/team-3.git',       branch: 'main'
                }
            }
        }

        // Stage 2
        stage('Build React App') {
            steps {
                dir('revstay/RevatureStayFrontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        // Stage 3
        stage('Copy Frontend into Spring Static Folder') {
            steps {
                sh 'rm -rf revstay/RevatureStay/src/main/resources/static/*'
                sh 'cp -r  revstay/RevatureStayFrontend/dist/* revstay/RevatureStay/src/main/resources/static/'
            }
        }

        // Stage 4
        stage('Build Spring Boot JAR') {
            steps {
                dir('revstay/RevatureStay') {
                    sh 'mvn clean package'
                }
            }
        }

        // Stage 5
        stage('Copy Project to EC2') {
            steps {
                withCredentials([file(credentialsId: 'ec2-ssh-key', variable: 'EC2_KEY')]) {
                    sh '''
                        chmod 400 $EC2_KEY
                        ssh -o StrictHostKeyChecking=no -i $EC2_KEY ec2-user@3.145.87.142 "mkdir -p revstay-app"
                        scp -o StrictHostKeyChecking=no -i $EC2_KEY revstay/RevatureStay/Dockerfile ec2-user@3.145.87.142:/home/ec2-user/revstay-app/
                        scp -o StrictHostKeyChecking=no -i $EC2_KEY revstay/RevatureStay/target/RevatureStay-0.0.1-SNAPSHOT.jar ec2-user@3.145.87.142:/home/ec2-user/revstay-app/
                    '''
                }
            }
        }

        // Stage 6
        stage('Deploy Docker Container on EC2') {
            steps {
                withCredentials([file(credentialsId: 'ec2-ssh-key', variable: 'EC2_KEY')]) {
                    sh '''#!/bin/bash
                      ssh -o StrictHostKeyChecking=no -i $EC2_KEY ec2-user@3.145.87.142 <<EOF
                        echo "ðŸ”Ž Checking for process using port 8080..."
                        PID=\$(lsof -t -i:8080 2>/dev/null)
                        if [ ! -z "\$PID" ]; then
                            echo "ðŸ”« Killing process using port 8080 (PID: \$PID)"
                            kill -9 \$PID
                        fi

                      echo "ðŸ“¦ Deploying new container..."
                      cd revstay-app
                      docker stop revstay-container || true
                      docker rm revstay-container || true
                      docker build -t revstay-app .
                      docker run -d -p 8080:8080 --name revstay-container -e SPRING_DATASOURCE_URL="${DB_URL}" -e SPRING_DATASOURCE_USERNAME="${DB_USERNAME}" -e SPRING_DATASOURCE_PASSWORD="${DB_PASSWORD}" revstay-app
                    EOF
                  '''
                }
              }
            }

        stage('Done') {
            steps {
                echo "âœ… App deployed successfully at http://3.145.87.142:8080"
            }
          }
      }
}